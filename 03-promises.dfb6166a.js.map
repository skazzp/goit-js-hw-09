{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAqBtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUS,MAAAR,IAGpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IA9BPR,EAAKiB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAGN,IADA,IAAIC,GAAcjB,EAAMkB,MACfC,EAAI,EAAGA,IAAMjB,EAAOgB,MAAOC,IAClChB,EAAcgB,EAAGF,GACdG,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUkB,EAAKD,EAALR,MACjBlB,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUuB,EAAKN,EAALR,MAClBlB,EAAA4B,OAAOK,QAAQ,sBAAuCH,OAAfrB,EAAS,QAAYqB,OAANE,EAAM,M,IAGhEV,IAAehB,EAAKiB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  // console.log(delay.value, step.value, amount.value);\n  let totalDelay = +delay.value;\n  for (let i = 1; i <= +amount.value; i++) {\n    createPromise(i, totalDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    // console.log(i, totalDelay);\n    totalDelay += +step.value;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     // console.log('1');\n//   })\n//   .catch(({ position, delay }) => {\n//     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//     // console.log('2');\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","totalDelay","value","i","then","param","delay1","Notify","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.dfb6166a.js.map"}